{"version":3,"sources":["components/Social/index.js","dev_components/Bio.js","dev_components/Skills.js","dev_components/Projects.js","dev_components/DividerBox.js","dev_sections/About.js","dev_sections/Footer.js","dev_sections/Header.js","dev_sections/QuoteTransition.js","App.js","serviceWorker.js","index.js"],"names":["Social","className","Grid","container","direction","justify","alignItems","href","title","target","rel","Bio","Container","maxWidth","component","id","mx","item","xs","md","Card","style","borderRadius","margin","CardMedia","alt","image","lg","Typography","variant","ColorButton","withStyles","theme","root","color","palette","getContrastText","green","backgroundColor","Button","skillsets","name","skills","yearXP","selfScore","Skills","useState","currentSkill","setCurrentSkill","showSkills","setShowSkills","setYearXP","p","Paper","padding","spacing","display","FormControl","m","InputLabel","Select","labelId","value","onChange","event","MenuItem","minHeight","alignContent","Box","width","borderLeft","borderBottom","paddingTop","overflow","bgcolor","SwitchTransition","mode","CSSTransition","key","in","timeout","classNames","flexDirection","alignSelf","map","skill","i","justifyContent","my","Chip","label","size","addEndListener","node","done","addEventListener","year","index","borderRight","height","onClick","useStyles","makeStyles","card","ListItemLink","props","ListItem","button","Projects","classes","showProject","setShowProject","showAll","setShowAll","projects","currentProject","setCurrentProject","project","sm","CardActionArea","modalImage","src","CardContent","gutterBottom","description","unmountOnExit","onEnter","onExited","align","List","aria-label","appLink","ListItemText","primary","repoLink","userStory","tech","techItem","DividerBox","useScrollPercentage","threshold","ref","percentage","whiteSpace","textAlign","letterSpacing","toPrecision","About","Footer","marginTop","dense","Header","colorArr","position","zIndex","top","left","transform","bottom","right","box","QuoteTransition","background","createMuiTheme","responsiveFontSizes","App","Fragment","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8615b2a.chunk.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid'\nimport './style.css';\n\nconst Social = () => {\n\n  return (\n    <div className='section container'>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        {/* IMPORTED FROM PREVIOUS PORTFOLIO */}\n        {/* TODO:\n              - create list of icons\n              - pass in theme color\n              - map each social\n              - blend with materialize\n        */}\n        <ul className=\"social-network social-circle justify-content-center\">\n          <li>\n            <a href=\"https://github.com/dansirdan\" className=\"icoGit\" title=\"Git\" target=\"_blank\" rel='noopener noreferrer'>\n              <i className=\"fab fa-github\"></i>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.facebook.com/dmonteton\" className=\"icoFacebook\" title=\"Facebook\" target=\"_blank\" rel='noopener noreferrer'>\n              <i className=\"fab fa-facebook\"></i>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/DanielMont_Eton\" className=\"icoTwitter\" title=\"Twitter\" target=\"_blank\" rel='noopener noreferrer'>\n              <i className=\"fab fa-twitter\"></i>\n            </a>\n          </li>\n          <li>\n            <a href=\"/images/Daniel_Mont-Eton.pdf\" className=\"icoPdf\" title=\"PDF\" target=\"_blank\" rel='noopener noreferrer'>\n              <i className=\"fas fa-file-pdf\"></i>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://www.linkedin.com/in/daniel-mont-eton-43a81055/\" className=\"icoLinkedin\" title=\"Linkedin\"\n              target=\"_blank\"\n              rel='noopener noreferrer'>\n              <i className=\"fab fa-linkedin\"></i>\n            </a>\n          </li>\n        </ul>\n        </Grid>\n    </div>\n  );\n};\n\nexport default Social;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Social from \"../components/Social\";\n// import { useScrollPercentage } from \"react-scroll-percentage\";\nimport Container from \"@material-ui/core/Container\";\n\nconst Bio = () => {\n  // const [ref, percentage] = useScrollPercentage({\n  //   threshold: 0,\n  // });\n\n  return (\n    <Container maxWidth='lg' component='section' id='biography'>\n      <Grid container alignItems='center' justify='space-between' mx='auto'>\n        <Grid item xs={12} md={5}>\n          <Card\n            style={{\n              borderRadius: \"50%\",\n              maxWidth: 400,\n              margin: \"10px auto\",\n            }}>\n            <CardMedia\n              component='img'\n              alt='photo of Daniel'\n              image='images/profile2.jpg'\n              title='Daniel Mont-Eton 2016'\n            />\n          </Card>\n          <Social />\n          {/* <div ref={ref} /> */}\n        </Grid>\n        <Grid item xs={12} md={6} lg={7}>\n          <Typography variant='h2'>Full Stack Engineer</Typography>\n          <hr />\n          <Typography variant='body1'>\n            <em>I am deeply passionate about people and technology.</em> My\n            experience from the professional dance world has shaped me into a\n            highly creative, collaborative, and adaptive Full Stack Developer.\n            For the past year I have been sharpening my Full Stack skills by\n            Teach Assisting and Substitute teaching a MERN-stack boot camp at\n            the University of Washington. With a background in choreography,\n            performance, visual art, and education I am a jack-of-all-trades\n            with a tenacity for learning, collaborating, and drawing inspiration\n            from the surrounding world.\n          </Typography>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Bio;\n","import React, { useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport green from \"@material-ui/core/colors/green\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { CSSTransition, SwitchTransition } from \"react-transition-group\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[300]),\n    backgroundColor: green[300],\n    \"&:hover\": {\n      backgroundColor: green[500],\n    },\n  },\n}))(Button);\n\nconst skillsets = [\n  {\n    name: \"Languages\",\n    skills: [\n      { name: \"JavaScript\", yearXP: 2, selfScore: 8 },\n      { name: \"HTML5\", yearXP: 2, selfScore: 8 },\n      { name: \"CSS3\", yearXP: 2, selfScore: 7 },\n      { name: \"C#\", yearXP: 1, selfScore: 4 },\n    ],\n  },\n  {\n    name: \"Frameworks\",\n    skills: [\n      { name: \"React.js\", yearXP: 2, selfScore: 8 },\n      { name: \"Node.js\", yearXP: 2, selfScore: 8 },\n      { name: \"Express.js\", yearXP: 2, selfScore: 8 },\n      { name: \"Angular\", yearXP: 1, selfScore: 3 },\n      { name: \"ASP.NET\", yearXP: 1, selfScore: 3 },\n    ],\n  },\n  {\n    name: \"Databases\",\n    skills: [\n      { name: \"SQL\", yearXP: 2, selfScore: 8 },\n      { name: \"U-SQL\", yearXP: 1, selfScore: 5 },\n      { name: \"MongoDB\", yearXP: 2, selfScore: 8 },\n    ],\n  },\n];\n\nconst Skills = () => {\n  const [currentSkill, setCurrentSkill] = useState(0);\n  const [showSkills, setShowSkills] = useState(false);\n  const [yearXP, setYearXP] = useState(true);\n\n  const handleShowSkills = event => {\n    setCurrentSkill(event.target.value);\n    setShowSkills(true);\n  };\n\n  return (\n    <Container maxWidth='lg' component='section' id='skills' p={6}>\n      <Paper\n        style={{\n          padding: \"2rem\",\n          backgroundColor: \"#e8f5e9\",\n        }}>\n        <Grid\n          container\n          direction='row'\n          spacing={2}\n          justify='center'\n          alignItems='flex-end'\n          p={4}>\n          <Grid item xs={12}>\n            <Typography variant='h2' component='h3'>\n              Interactive Skills Chart\n            </Typography>\n            <hr></hr>\n          </Grid>\n          <Grid item container alignItems='center' spacing={2} direction='row'>\n            <Grid item>\n              <Typography variant='subtitle1' display='inline'>\n                Current Skill:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item xs={4}>\n              <FormControl m={3}>\n                <InputLabel id='skill-select-label'>Select Skill</InputLabel>\n                <Select\n                  labelId='skill-select-label'\n                  id='skill-select'\n                  value={currentSkill}\n                  onChange={handleShowSkills}>\n                  <MenuItem value={0}>Languages</MenuItem>\n                  <MenuItem value={1}>Frameworks</MenuItem>\n                  <MenuItem value={2}>Database</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            item\n            xs={12}\n            style={{ minHeight: \"50vh\" }}\n            alignContent='center'>\n            <Box\n              width='100%'\n              borderLeft={1}\n              borderBottom={1}\n              paddingTop={2}\n              overflow='hidden'\n              bgcolor='white'>\n              <SwitchTransition mode='out-in'>\n                <CSSTransition\n                  key={currentSkill + \"year=\" + yearXP}\n                  in={showSkills && yearXP}\n                  timeout={500}\n                  classNames='skills'>\n                  <Box\n                    width='100%'\n                    display='flex'\n                    flexDirection='column'\n                    alignSelf='flex-end'\n                    overflow='hidden'>\n                    {skillsets[currentSkill].skills.map((skill, i) => (\n                      <Box\n                        key={i}\n                        display='flex'\n                        justifyContent='flex-end'\n                        alignItems='center'\n                        width={\n                          yearXP\n                            ? `${5 + skill.yearXP * 20}%`\n                            : `${5 + skill.selfScore * 10}%`\n                        }\n                        p={1}\n                        my={2}\n                        borderRadius={\"0 25px 25px 0\"}\n                        bgcolor={green[100]}>\n                        <Chip\n                          label={skill.name}\n                          size='small'\n                          style={{ backgroundColor: green[300] }}\n                        />\n                      </Box>\n                    ))}\n                  </Box>\n                </CSSTransition>\n              </SwitchTransition>\n              <SwitchTransition mode='out-in'>\n                <CSSTransition\n                  key={yearXP}\n                  addEndListener={(node, done) => {\n                    node.addEventListener(\"transitionend\", done, false);\n                  }}\n                  classNames='xp'>\n                  <Box display='flex' width='100%' alignSelf='flex-end'>\n                    {yearXP\n                      ? [1, 2, 3, 4, 5].map((year, index) => (\n                          <Box\n                            key={\"year-measure-\" + index}\n                            width='20%'\n                            borderRight={1}\n                            height={25}\n                            display='flex'\n                            p={2}\n                            justifyContent='flex-end'\n                            alignItems='center'>\n                            {year}\n                          </Box>\n                        ))\n                      : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((year, index) => (\n                          <Box\n                            key={\"selfXP-measure-\" + index}\n                            width='10%'\n                            borderRight={1}\n                            height={25}\n                            display='flex'\n                            p={2}\n                            justifyContent='flex-end'\n                            alignItems='center'>\n                            {year}\n                          </Box>\n                        ))}\n                  </Box>\n                </CSSTransition>\n              </SwitchTransition>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Typography variant='subtitle1' display='inline'>\n              Current Scale:{\" \"}\n            </Typography>\n            <Typography display='inline' variant='subtitle2'>\n              {yearXP ? \"Years of Experience\" : \"Self-eval Score (out of 10)\"}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Box display='flex' justifyContent='center'>\n              <ColorButton\n                variant='contained'\n                color='primary'\n                onClick={() => setYearXP(!yearXP)}>\n                Change Scale to {yearXP ? \"Score\" : \"Years\"}\n              </ColorButton>\n            </Box>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Skills;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Button from \"@material-ui/core/Button\";\nimport projects from \"./projects.json\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport green from \"@material-ui/core/colors/green\";\nimport Chip from \"@material-ui/core/Chip\";\nimport \"./style.css\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 300,\n    margin: \"10px auto\",\n  },\n});\n\nfunction ListItemLink(props) {\n  return <ListItem button component='a' {...props} />;\n}\n\nconst Projects = () => {\n  const classes = useStyles();\n\n  const [showProject, setShowProject] = useState(false);\n  const [showAll, setShowAll] = useState(true);\n  const [currentProject, setCurrentProject] = useState(projects.projects[0]);\n\n  return (\n    <Container\n      maxWidth='lg'\n      component='section'\n      id='projects'\n      p={4}\n      style={{ minHeight: \"90vh\" }}>\n      <Paper\n        style={{\n          minHeight: \"90vh\",\n          padding: \"2rem\",\n          backgroundColor: \"#e8f5e9\",\n        }}>\n        {showAll && (\n          <Grid\n            container\n            direction='row'\n            justify='space-between'\n            alignItems='center'\n            spacing={2}\n            p={4}>\n            {projects.projects.map((project, i) => (\n              <Grid key={\"project-key-\" + i} item xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardActionArea\n                    onClick={() => {\n                      setCurrentProject(projects.projects[i]);\n                      setShowProject(true);\n                    }}>\n                    <Box display={{ xs: \"none\", sm: \"block\" }}>\n                      <CardMedia\n                        component='img'\n                        alt={project.modalImage.alt}\n                        height='200'\n                        image={project.modalImage.src}\n                        title='Contemplative Reptile'\n                      />\n                    </Box>\n                    <CardContent>\n                      <Typography gutterBottom variant='h5' component='h6'>\n                        {project.title}\n                      </Typography>\n                      <Typography\n                        variant='body2'\n                        color='textSecondary'\n                        component='p'>\n                        {project.description}\n                      </Typography>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        )}\n        <CSSTransition\n          in={showProject}\n          timeout={300}\n          classNames='project'\n          unmountOnExit\n          onEnter={() => setShowAll(false)}\n          onExited={() => setShowAll(true)}>\n          <Box bgcolor='white' p={4}>\n            <Grid\n              container\n              style={{ minHeight: \"80vh\" }}\n              direction='column'\n              justify='space-between'\n              spacing={1}\n              alignItems='center'>\n              <Grid\n                item\n                container\n                direction='row'\n                justify='center'\n                alignContent='center'>\n                <Grid item>\n                  <Typography variant='h2' component='h4' align='center'>\n                    {currentProject.title}\n                  </Typography>\n                  <hr></hr>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant='subtitle1' align='center'>\n                    {currentProject.description}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid container item direction='row' justify='center' spacing={2}>\n                <Grid item xs={12} md={8}>\n                  <Card\n                    style={{\n                      maxWidth: 400,\n                      margin: \"auto\",\n                    }}>\n                    <CardMedia\n                      component='img'\n                      alt={currentProject.modalImage.alt}\n                      image={currentProject.modalImage.src}\n                      title={currentProject.modalImage.alt}\n                    />\n                  </Card>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Box bgcolor={green[50]}>\n                    <List\n                      component='nav'\n                      aria-label='secondary mailbox folders'>\n                      <ListItemLink\n                        href={currentProject.appLink}\n                        target='_blank'>\n                        <ListItemText primary='Deployed App' />\n                      </ListItemLink>\n                      <ListItemLink\n                        href={currentProject.repoLink}\n                        target='_blank'>\n                        <ListItemText primary='Repository' />\n                      </ListItemLink>\n                    </List>\n                  </Box>\n                </Grid>\n                <Grid item xs={12}>\n                  <hr></hr>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant='body1' align='center'>\n                    {currentProject.userStory}\n                  </Typography>\n                </Grid>\n                <Grid container item xs={12} spacing={1}>\n                  {currentProject.tech.map((techItem, i) => (\n                    <Grid item key={\"tech-chip-\" + i}>\n                      <Chip\n                        label={techItem}\n                        style={{ backgroundColor: green[200] }}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n              <Grid container item justify='flex-end' alignContent='center'>\n                <Button\n                  variant='outlined'\n                  onClick={() => setShowProject(false)}>\n                  Close\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </CSSTransition>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useScrollPercentage } from \"react-scroll-percentage\";\n\nconst DividerBox = ({title}) => {\n  const [ref, percentage] = useScrollPercentage({\n    threshold: 0,\n  });\n  return (\n    <Box\n      bgcolor='#a5d6a7'\n      width={\"100%\"}\n      height={200}\n      display='flex'\n      alignItems='center'\n      whiteSpace='nowrap'\n      overflow='hidden'\n      justifyContent='center'>\n      <Typography variant='h2' component='h3' ref={ref}>\n        <Box\n          textAlign='center'\n          display='block'\n          whiteSpace='nowrap'\n          overflow='hidden'\n          letterSpacing={40 - percentage.toPrecision(2) * 35}>\n          {title}\n        </Box>\n      </Typography>\n    </Box>\n  );\n};\n\nexport default DividerBox;\n","import React from \"react\";\nimport Bio from \"../dev_components/Bio\";\n// import Pitch from \"../dev_components/Pitch\";\nimport Skills from \"../dev_components/Skills\";\nimport Projects from \"../dev_components/Projects\";\nimport DividerBox from \"../dev_components/DividerBox\";\n\nconst About = () => {\n  return (\n    <main>\n      <Bio />\n      <DividerBox title={\"Projects\"}/>\n      <Projects />\n      <DividerBox title={\"Skills\"}/>\n      <Skills />\n      {/* <Pitch /> */}\n    </main>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport green from \"@material-ui/core/colors/green\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Social from \"../components/Social\";\n\nfunction ListItemLink(props) {\n  return <ListItem button component='a' {...props} />;\n}\n\nconst Footer = () => {\n  return (\n    <Box width={\"100%\"} component='footer' marginTop={20} alignContent='center'>\n      <Grid container direction='row' style={{ width: \"100%\" }}>\n        <Grid item xs={12}>\n          <Box width={\"100%\"} height={\"100%\"} bgcolor={green[100]} p={2}>\n            <Grid container direction='row' alignItems=\"center\" >\n              <Grid item xs={12} md={8}>\n                <Social />\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Typography variant='overline'>Built with:</Typography>\n                <List dense={true}>\n                  <ListItemLink href='https://reactjs.org/' target='_blank'>\n                    <ListItemText primary='React.js' />\n                  </ListItemLink>\n                  <ListItemLink href='https://material-ui.com/' target='_blank'>\n                    <ListItemText primary='Material-UI' />\n                  </ListItemLink>\n                  <ListItemLink\n                    href='http://reactcommunity.org/react-transition-group/'\n                    target='_blank'>\n                    <ListItemText primary='React Transition Group' />\n                  </ListItemLink>\n                  <ListItemLink\n                    href='https://www.npmjs.com/package/react-scroll-percentage'\n                    target='_blank'>\n                    <ListItemText primary='react-scroll-percentage NPM' />\n                  </ListItemLink>\n                  <ListItemLink\n                    href='https://github.com/dansirdan/dansirdan.github.io'\n                    target='_blank'>\n                    <ListItemText primary='Check out the repository' />\n                  </ListItemLink>\n                </List>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Box\n            width={\"100%\"}\n            height={50}\n            bgcolor={green[200]}\n            display='flex'\n            justifyContent='center'\n            p={1}>\n            <Typography variant='overline' align='center'>\n              &copy; 2020 Dan Mont-Eton\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useScrollPercentage } from \"react-scroll-percentage\";\nimport Box from \"@material-ui/core/Box\";\nimport green from '@material-ui/core/colors/green';\n\nconst Header = () => {\n  const [ref, percentage] = useScrollPercentage({\n    threshold: 0,\n  });\n\n  const percentArr = [76, 92, 140, 118, 110, 64, 120, 77, 50, 63, 40, 82, 95, 130, 79, 40, 100, 73, 62, 39];\n  const colorArr =[200, 400, 100, 50, 300, 100, 200, 400, 200, 500, 400, 200,400, 100, 50, 200, 50, 300, 600, 400 ];\n\n  return (\n    <header style={{ height: \"100vh\", position: \"relative\", overflow: 'hidden' }}>\n      <Typography\n        variant='h2'\n        component='h1'\n        style={{\n          zIndex: 10,\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n        }}>\n        <Box\n          textAlign='center'\n          display='block'\n          whiteSpace='nowrap'\n          overflow=\"hidden\"\n          letterSpacing={percentage.toPrecision(2) * 35}>\n          Daniel Mont-Eton\n        </Box>\n      </Typography>\n      <div\n        style={{\n          zIndex: 5,\n          height: \"100vh\",\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          right: 0,\n        }}>\n        <Box height='100%' width='100%' overflow=\"hidden\">\n          {percentArr.map((box, i) => (\n            <Box\n              key={i}\n              display=\"inline-block\"\n              width={1/20}\n              borderRadius={`${percentage.toPrecision(2) * 30}%`}\n              height={`${box/5 + percentage.toPrecision(2) * box}%`}\n              bgcolor={green[colorArr[i]]}>\n              <br />\n            </Box>\n          ))}\n        </Box>\n      </div>\n      <div style={{ position: \"absolute\", bottom: 0 }} ref={ref}></div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { useScrollPercentage } from \"react-scroll-percentage\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst QuoteTransition = () => {\n  const [ref, percentage] = useScrollPercentage({\n    threshold: 0,\n  });\n\n  return (\n    <Grid\n      container\n      direction='column'\n      justify='center'\n      alignItems='center'\n      style={{\n        height: \"30vh\",\n        background: `rgba(165,214,167,${percentage.toPrecision(2)})`,\n      }}>\n      <Grid item>\n        <blockquote ref={ref}>\n          <Typography variant='body1'>\n            The performance is the practice; the practice is the performance.\n          </Typography>\n          <cite>\n            <Typography variant='body2'>- Joanna Kotze</Typography>\n          </cite>\n        </blockquote>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default QuoteTransition;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  createMuiTheme,\n  responsiveFontSizes,\n  ThemeProvider,\n} from \"@material-ui/core/styles\";\nimport { About, Footer, Header, QuoteTransition } from \"./dev_sections\";\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Header />\n        <QuoteTransition />\n        <About />\n        <Footer />\n      </ThemeProvider>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}